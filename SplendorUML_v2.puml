@startuml
class Carte{
- chemin_vers_image:string
- point_prestige:int
- courronnes:int
}

class Joueur{
- type:enum{Humain, IA}
- cartes_reservees:Carte_Ressource[]
- cartes_noble:Carte_Noble[]
- points_prestige:int
- points_bonus:int[4]
- privileges:Privilege[]
+ verification_points()
}
class Jeton{
-type:enum{Bleu, Jaune, Vert, Rouge, noir, Rose}
}

class Bonus {
- type:enum{Obsidian, ...}
- nombre:int
}

class Carte_Ressource{
- type:enum{I, II, III}
- visible:boolean
- bonus:Bonus[]
- niveau:int
- prix:Bonus[]
}

class Carte_Noble {}

class Jeu {
- joueur_actif:Joueur
- joueurs:Joueur[2]
- privileges:Privilege[3]
- plateau:Plateau
- pioches:Pioche[3]
- conditions_fin()
- tour_suivant()
- remettre_jetons_sur_plateau()
}

class Privilege {}

class Plateau {
- jetons:Jeton[25]
}
class Pioche{
- cartes_dans_pioche:Carte_Ressource[]
- cartes_dehors:Carte_Ressource[]
- max_cartes_revelees:int
+ joueur_prend(numero_pioche:int, numero_carte:int)
+ distribution(numero_pioche:int, numero_carte:int)
}

/'Héritage :'/
Carte <|-- Carte_Ressource
Carte <|-- Carte_Noble

/'Relation :'/
Joueur "1"-* Carte_Ressource
Joueur "1"-* Carte_Noble
Joueur "1"-*Privilege
Plateau --* Jeton
Pioche --* Carte_Ressource
Carte_Ressource --* Bonus
Jeu --"2" Joueur
Jeu --"1" Plateau
Jeu --"3" Pioche
Jeu --"3" Privilege


title Une autre version en tenant davantage compte du schéma de la version papier de vendredi à la BU
note top of Carte #aqua: To-Do : mettre les fonctions partout
@enduml